#include <stdio.h>
#include <string.h>
#include <ctype.h>
int modInverse(int a, int m) {
    a = a % m;
    for (int x = 1; x < m; x++) {
        if ((a * x) % m == 1)
            return x;
    }
    return -1;
}
int determinant(int matrix[2][2]) {
    return (matrix[0][0] * matrix[1][1] - matrix[0][1] * matrix[1][0]) % 26;
}
void matrixInverse(int matrix[2][2], int inverse[2][2]) {
    int det = determinant(matrix);
    int det_inv = modInverse(det, 26);
    if (det_inv == -1) {
        printf("Inverse does not exist!\n");
        return;
    }
    inverse[0][0] = (matrix[1][1] * det_inv) % 26;
    inverse[0][1] = (-matrix[0][1] * det_inv) % 26;
    inverse[1][0] = (-matrix[1][0] * det_inv) % 26;
    inverse[1][1] = (matrix[0][0] * det_inv) % 26;
    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 2; j++) {
            if (inverse[i][j] < 0) {
                inverse[i][j] += 26;
            }
        }
    }
}
void hillEncrypt(char plaintext[], char ciphertext[], int key[2][2]) {
    int len = strlen(plaintext);
    for (int i = 0; i < len; i += 2) {
        int x1 = plaintext[i] - 'A';
        int x2 = plaintext[i + 1] - 'A';
        
        ciphertext[i] = ((key[0][0] * x1 + key[0][1] * x2) % 26) + 'A';
        ciphertext[i + 1] = ((key[1][0] * x1 + key[1][1] * x2) % 26) + 'A';
    }
    ciphertext[len] = '\0';
}
void hillDecrypt(char ciphertext[], char plaintext[], int key[2][2]) {
    int inverse[2][2];
    matrixInverse(key, inverse);
    int len = strlen(ciphertext);
    for (int i = 0; i < len; i += 2) {
        int y1 = ciphertext[i] - 'A';
        int y2 = ciphertext[i + 1] - 'A';
        plaintext[i] = ((inverse[0][0] * y1 + inverse[0][1] * y2) % 26) + 'A';
        plaintext[i + 1] = ((inverse[1][0] * y1 + inverse[1][1] * y2) % 26) + 'A';
    }
    plaintext[len] = '\0';
}
int main() {
    char message[] = "MEETMEATTHEUSUALPLACEATTENRATHERTHANEIGHTOCLOCK";
    char plaintext[100];
    char ciphertext[100];
    int key[2][2] = {
        {9, 4},
        {5, 7}
    };
    printf("Original message: %s\n", message);
    hillEncrypt(message, ciphertext, key);
    printf("Encrypted message: %s\n", ciphertext);
    hillDecrypt(ciphertext, plaintext, key);
    printf("Decrypted message: %s\n", plaintext);
    return 0;
}
